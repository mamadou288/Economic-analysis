import streamlit as st
import pandas as pd
import plotly.express as px
import plotly.graph_objects as go
import numpy as np
from pathlib import Path

# Configuration de la page avec th√®me personnalis√©
st.set_page_config(
    page_title="Analyse du PIB Mondial",
    page_icon="üìä",
    layout="wide",
    initial_sidebar_state="expanded"
)

# D√©finition des couleurs personnalis√©es pour les graphiques
THEME_COLORS = [
    '#d1d5db', '#9ca3af', '#6b7280', '#4b5563',
    '#e5e7eb', '#374151', '#f3f4f6', '#1f2937'
]

BACKGROUND_COLOR = '#0d1117'
PAPER_COLOR = '#161b22'
GRID_COLOR = '#21262d'
TEXT_COLOR = '#f3f4f6'

# Configuration du th√®me des graphiques
PLOT_TEMPLATE = go.layout.Template()
PLOT_TEMPLATE.layout.plot_bgcolor = BACKGROUND_COLOR
PLOT_TEMPLATE.layout.paper_bgcolor = PAPER_COLOR
PLOT_TEMPLATE.layout.font = dict(color=TEXT_COLOR)
PLOT_TEMPLATE.layout.xaxis = dict(
    gridcolor=GRID_COLOR, 
    zerolinecolor=GRID_COLOR,
    linecolor=GRID_COLOR
)
PLOT_TEMPLATE.layout.yaxis = dict(
    gridcolor=GRID_COLOR, 
    zerolinecolor=GRID_COLOR,
    linecolor=GRID_COLOR
)

# Configuration des l√©gendes des graphiques
LEGEND_STYLE = dict(
    bgcolor='rgba(13, 17, 23, 0.8)',
    bordercolor='rgba(209, 213, 219, 0.3)',
    borderwidth=1,
    font=dict(color=TEXT_COLOR)
)

# Chargement du CSS externe
def load_css(css_file):
    with open(css_file) as f:
        st.markdown(f'<style>{f.read()}</style>', unsafe_allow_html=True)

# Charger le fichier CSS
load_css('apps/style/GPDstyle.css')

# En-t√™te avec style
st.markdown("""üåç<span>Analyse Mondiale des Tendances √âconomiques</span> </br></br>
            üéØ<span>Objectif de l'Analyse</span> </br></br>
            Cette analyse approfondie explore les dynamiques √©conomiques mondiales √† travers le temps, 
            mettant en lumi√®re les disparit√©s de d√©veloppement entre les pays, les impacts des crises majeures, 
            et les tendances de croissance √† long terme.
            Notre dashboard interactif vous permet d'explorer les relations complexes entre la taille 
            des √©conomies et leur potentiel de croissance, offrant une perspective unique sur les 
            transformations √©conomiques globales.
""", unsafe_allow_html=True)

# Fonction de chargement des donn√©es avec cache
@st.cache_data
def load_data():
    try:
        df = pd.read_csv("./data/gdp_data.csv")
        df['Log PIB'] = np.log10(df['GDP (Current US$)'])
        return df
    except Exception as e:
        print(f"Erreur lors du chargement des donn√©es: {str(e)}")
        return None

try:
    df = load_data()
    
    if df is not None:
        # Sidebar stylis√©e
        with st.sidebar:
            st.markdown("""
                <div class="sidebar-header">
                    <h2>üîç Param√®tres d'Exploration</h2>
                </div>
            """, unsafe_allow_html=True)
            
            # S√©lection de l'ann√©e avec style
            years = sorted(df['Year'].unique())
            selected_years = st.slider(
                "üìÖ Horizon Temporel d'Analyse",
                min_value=min(years),
                max_value=max(years),
                value=(min(years), max(years))
            )
            
            # S√©lection des pays avec style
            all_countries = sorted(df['Country'].unique())
            default_countries = all_countries[:5] if len(all_countries) >= 5 else all_countries
            selected_countries = st.multiselect(
                "üåê √âconomies √† Comparer",
                options=all_countries,
                default=default_countries
            )
        
        # Filtrage des donn√©es
        filtered_df = df[
            (df['Year'].between(selected_years[0], selected_years[1])) &
            (df['Country'].isin(selected_countries))
        ]
        
        # Layout en colonnes avec nouvelle grille
        st.markdown('<div class="graph-grid">', unsafe_allow_html=True)

        # Premi√®re colonne
        st.markdown('<div class="column">', unsafe_allow_html=True)
        st.markdown("""
            <div class="graph-container">
                <h3>üìà √âvolution de la Puissance √âconomique</h3>
                <p class="graph-description">Trajectoire historique du PIB nominal, refl√©tant l'√©volution 
                de la taille des √©conomies et leur positionnement mondial au fil du temps.</p>
            """, unsafe_allow_html=True)

        fig_gdp = px.line(
            filtered_df,
            x='Year',
            y='GDP (Current US$)',
            color='Country',
            title="",
            template=PLOT_TEMPLATE,
            color_discrete_sequence=THEME_COLORS
        )
        fig_gdp.update_layout(
            height=400,
            hovermode='x unified',
            legend=LEGEND_STYLE,
            plot_bgcolor=BACKGROUND_COLOR,
            paper_bgcolor=PAPER_COLOR
        )
        st.plotly_chart(fig_gdp, use_container_width=True)

        st.markdown("""
            <div class="observation-box">
                <h4>Points Cl√©s</h4>
                <ul>
                    <li>√âmergence de nouvelles puissances √©conomiques</li>
                    <li>Impact des crises financi√®res sur la trajectoire √©conomique</li>
                    <li>√âcarts croissants entre les √©conomies d√©velopp√©es et √©mergentes</li>
                </ul>
            </div>
            </div>
        """, unsafe_allow_html=True)
        st.markdown('</div>', unsafe_allow_html=True)

        # Deuxi√®me colonne
        st.markdown('<div class="column">', unsafe_allow_html=True)
        st.markdown("""
            <div class="graph-container">
                <h3>üíπ Dynamiques de Croissance</h3>
                <p class="graph-description">Analyse comparative des taux de croissance, mettant en √©vidence 
                les p√©riodes d'expansion, de r√©cession et les cycles √©conomiques.</p>
            """, unsafe_allow_html=True)

        fig_growth = px.line(
            filtered_df,
            x='Year',
            y='GDP Growth (%)',
            color='Country',
            title="",
            template=PLOT_TEMPLATE,
            color_discrete_sequence=THEME_COLORS
        )
        fig_growth.update_layout(
            height=400,
            hovermode='x unified',
            legend=LEGEND_STYLE,
            plot_bgcolor=BACKGROUND_COLOR,
            paper_bgcolor=PAPER_COLOR
        )
        st.plotly_chart(fig_growth, use_container_width=True)

        st.markdown("""
            <div class="observation-box">
                <h4>üîç Points Cl√©s:</h4>
                <ul>
                    <li>Cycles de croissance et p√©riodes de volatilit√©</li>
                    <li>R√©silience diff√©renci√©e face aux chocs √©conomiques</li>
                    <li>Tendances de convergence/divergence entre √©conomies</li>
                </ul>
            </div>
            </div>
        """, unsafe_allow_html=True)
        st.markdown('</div>', unsafe_allow_html=True)

        st.markdown('</div>', unsafe_allow_html=True)  # Fin de la grille

        # Section Relation PIB vs Croissance
        st.markdown("""
            <div class="graph-container">
                <h3>üîÑ Relation Taille-Croissance des √âconomies</h3>
                <p class="graph-description">Exploration de la corr√©lation entre la taille d'une √©conomie et 
                son potentiel de croissance, testant l'hypoth√®se de convergence √©conomique.</p>
            """, unsafe_allow_html=True)
        
        fig_scatter = px.scatter(
            filtered_df,
            x='GDP (Current US$)',
            y='GDP Growth (%)',
            color='Country',
            title="",
            template=PLOT_TEMPLATE,
            color_discrete_sequence=THEME_COLORS,
            hover_data=['Year']
        )
        fig_scatter.update_layout(
            height=500,
            legend=LEGEND_STYLE,
            plot_bgcolor=BACKGROUND_COLOR,
            paper_bgcolor=PAPER_COLOR
        )
        st.plotly_chart(fig_scatter, use_container_width=True)
        st.markdown("</div>", unsafe_allow_html=True)
        
        # Statistiques descriptives
        st.markdown("""
            <div class="graph-container">
                <h3>üìä Indicateurs de Performance √âconomique</h3>
                <p class="graph-description">Synth√®se comparative des performances √©conomiques moyennes, 
                permettant d'identifier les leaders en termes de taille et de dynamisme.</p>
        """, unsafe_allow_html=True)
        
        col3, col4 = st.columns(2)
        
        with col3:
            avg_gdp = filtered_df.groupby('Country')['GDP (Current US$)'].mean().sort_values(ascending=False)
            fig_avg = px.bar(
                avg_gdp,
                title="PIB Moyen par Pays",
                template=PLOT_TEMPLATE,
                color_discrete_sequence=THEME_COLORS
            )
            fig_avg.update_layout(
                height=400,
                showlegend=False,
                plot_bgcolor=BACKGROUND_COLOR,
                paper_bgcolor=PAPER_COLOR
            )
            st.plotly_chart(fig_avg, use_container_width=True)
        
        with col4:
            avg_growth = filtered_df.groupby('Country')['GDP Growth (%)'].mean().sort_values(ascending=False)
            fig_avg_growth = px.bar(
                avg_growth,
                title="Croissance Moyenne du PIB",
                template=PLOT_TEMPLATE,
                color_discrete_sequence=THEME_COLORS
            )
            fig_avg_growth.update_layout(
                height=400,
                showlegend=False,
                plot_bgcolor=BACKGROUND_COLOR,
                paper_bgcolor=PAPER_COLOR
            )
            st.plotly_chart(fig_avg_growth, use_container_width=True)
        
        st.markdown("</div>", unsafe_allow_html=True)
        
        # Tableau d√©taill√©
        st.markdown("""
            <div class="data-table">
                <h3>üìë Donn√©es √âconomiques D√©taill√©es</h3>
                <p class="table-description">Ensemble complet des donn√©es historiques permettant une analyse 
                approfondie des trajectoires √©conomiques individuelles.</p>
        """, unsafe_allow_html=True)
        
        st.dataframe(
            filtered_df[['Country', 'Year', 'GDP (Current US$)', 'GDP Growth (%)']]
            .sort_values(['Country', 'Year']),
            use_container_width=True
        )
        st.markdown("</div>", unsafe_allow_html=True)

except Exception as e:
    st.error(f"Erreur lors du chargement des donn√©es: {str(e)}")
    st.markdown("""
        <div class="error-message">
            <h3>Erreur</h3>
            <p>Veuillez v√©rifier que:</p>
            <ul>
                <li>Le fichier gdp_data.csv est pr√©sent dans le r√©pertoire ./data/</li>
                <li>Le format des donn√©es est conforme aux attentes</li>
                <li>Les colonnes n√©cessaires sont pr√©sentes dans le fichier</li>
            </ul>
        </div>
    """, unsafe_allow_html=True) 